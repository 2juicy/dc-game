{"version":3,"sources":["features/player/player_walk.png","config/constants.js","features/map/index.js","features/player/index.js","features/combat/index.js","features/player/reducer.js","features/map/reducer.js","features/modal/reducer.js","config/store.js","array.js","maps/1/tiles.js","maps/1/index.js","maps/1/enemies.js","features/modal/index.js","features/movement/index.js","features/world/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","SPRITE_SIZE","MAP_HEIGHT","MAP_WIDTH","getTileSprite","type","MapTile","props","react_default","a","createElement","className","concat","tile","style","height","width","MapRow","tiles","map","connect","state","position","top","left","border","row","Object","objectSpread","player","backgroundImage","walkSprite","backgroundPosition","spriteLocation","Combat","_ref","enemy","HP","enemyHP","message","src","alt","textTransform","name","image","hp","const","initialState","direction","walkIndex","playerReducer","arguments","length","undefined","action","payload","mapReducer","visible","modalReducer","rootReducer","combineReducers","modal","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","range","start","end","Array","apply","val","index","sample","array","Math","floor","random","_1","enemies","levelRange","randomEnemy","_enemy","parseInt","toConsumableArray","_useState","useState","_useState2","slicedToArray","setEnemy","_useState3","_useState4","setMessage","_useState5","_useState6","setHP","_useState7","_useState8","setEnemyHP","useEffect","addEventListener","handleCombatKeys","removeEventListener","e","preventDefault","keyCode","dmg","setTimeout","dispatch","handleCombat","console","log","attemptMove","oldPos","newPos","inBoundary","observeBoundaries","getState","y","x","observeImpassable","getWalkIndex","getNewPosition","getSpriteLocation","dispatchMove","World","this","persistMapData","margin","React","Component","component","handleKeyDown","App","world","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.810ff8a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/player_walk.9f19440f.png\";","export const SPRITE_SIZE = 40;\r\nexport const MAP_HEIGHT = SPRITE_SIZE * 10;\r\nexport const MAP_WIDTH = SPRITE_SIZE * 20;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { SPRITE_SIZE } from \"../../config/constants\";\nimport \"./style.css\";\n\nfunction getTileSprite(type) {\n  switch (type) {\n    case 0:\n      return \"grass\";\n    case 3:\n      return \"tree\";\n    case 4:\n      return \"chest\";\n    case 5:\n      return \"rock\";\n    case 6:\n      return \"tree\";\n    default:\n  }\n}\n\nfunction MapTile(props) {\n  return (\n    <div\n      className={`tile ${getTileSprite(props.tile)}`}\n      style={{\n        height: SPRITE_SIZE,\n        width: SPRITE_SIZE\n      }}\n    />\n  );\n}\n\nfunction MapRow(props) {\n  return (\n    <div\n      className=\"row\"\n      style={{\n        height: SPRITE_SIZE\n      }}\n    >\n      {props.tiles.map(tile => (\n        <MapTile tile={tile} />\n      ))}\n    </div>\n  );\n}\n\nfunction Map(props) {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        top: \"0px\",\n        left: \"0px\",\n        width: \"800px\",\n        height: \"480px\",\n        border: \"2.5px solid gray\"\n      }}\n    >\n      {props.tiles.map(row => (\n        <MapRow tiles={row} />\n      ))}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tiles: state.map.tiles\n  };\n}\n\nexport default connect(mapStateToProps)(Map);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport walkSprite from \"./player_walk.png\";\r\nimport { SPRITE_SIZE } from \"../../config/constants\";\r\n\r\nfunction Player(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: props.position[1],\r\n        left: props.position[0],\r\n        backgroundImage: `url('${walkSprite}')`,\r\n        backgroundPosition: props.spriteLocation,\r\n        width: `${SPRITE_SIZE}px`,\r\n        height: `${SPRITE_SIZE}px`\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.player\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nexport default function Combat({ enemy, HP, enemyHP, message }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"player\">\r\n        <h4>You</h4>\r\n        <img src={`player/player.png`} alt=\"Enemy\" />\r\n        <h4>HP: {HP[0]}/50</h4>\r\n      </div>\r\n      <div className=\"menu\">\r\n        <div className=\"menu-item\">\r\n          <img src=\"buttons/ctrl.png\" alt=\"Heal\" />\r\n          <div>\r\n            <h4>to heal</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"menu-item\">\r\n          <img src=\"buttons/spacebar.png\" alt=\"Attack\" />\r\n          <div>\r\n            <h4>to attack</h4>\r\n          </div>\r\n        </div>\r\n        <h4 className=\"combat-text\">You have {HP[1]} potion(s) left!</h4>\r\n        <h4 className=\"combat-text\">{message}</h4>\r\n      </div>\r\n      <div className=\"enemy\">\r\n        <h4 style={{ textTransform: \"capitalize\" }}>{enemy.name}</h4>\r\n        <img src={`enemies/${enemy.image}`} alt=\"Enemy\" />\r\n        <h4>\r\n          HP: {enemyHP}/{enemy.hp} | Lvl: {enemy.hp / enemy.const}\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCombat.propTypes = {\r\n  enemy: PropTypes.object.isRequired,\r\n  enemyHP: PropTypes.number.isRequired,\r\n  HP: PropTypes.arrayOf(PropTypes.number),\r\n  message: PropTypes.string.isRequired\r\n};\r\n","const initialState = {\r\n  position: [0, 0],\r\n  spriteLocation: \"0px 40px\",\r\n  direction: \"EAST\",\r\n  walkIndex: 0\r\n};\r\n\r\nconst playerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"MOVE_PLAYER\":\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case \"UPDATE_WALK_INDEX\":\r\n      return {\r\n        ...state,\r\n        walkIndex: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playerReducer;\r\n","const initialState = {\r\n  tiles: []\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TILES\":\r\n      return {\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mapReducer;\r\n","const initialState = {\n  visible: false\n};\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"START_COMBAT\":\n      return { visible: true };\n    case \"END_COMBAT\":\n      return { visible: false };\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import { createStore, combineReducers } from \"redux\";\nimport playerReducer from \"../features/player/reducer\";\nimport mapReducer from \"../features/map/reducer\";\nimport modalReducer from \"../features/modal/reducer\";\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n  map: mapReducer,\n  modal: modalReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","export function range(start, end) {\n  return Array.apply(0, Array(end + 1 - start)).map(function(val, index) {\n    return index + start;\n  });\n}\n\nexport function sample(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n","// prettier-ignore\r\nexport const tiles = [\r\n    [0,0,0,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6],\r\n    [6,0,0,5,5,5,5,6,6,6,6,6,6,6,6,6,6,5,5,6],\r\n    [6,6,0,0,6,5,6,6,0,0,6,6,0,0,6,6,0,4,5,6],\r\n    [6,6,0,0,6,6,6,6,6,0,0,0,0,5,6,6,0,0,5,6],\r\n    [6,6,0,0,0,6,6,6,6,0,0,6,5,5,6,6,6,3,6,6],\r\n    [6,5,5,5,0,0,6,0,6,0,0,6,5,6,6,6,6,3,6,6],\r\n    [6,6,5,5,0,0,0,0,0,0,0,6,6,6,0,0,0,0,6,6],\r\n    [6,6,6,6,6,0,0,6,6,6,0,0,6,0,0,6,6,0,6,5],\r\n    [6,6,6,0,0,0,0,6,6,0,0,0,0,0,0,5,6,6,5,5],\r\n    [6,6,6,6,0,0,6,6,6,0,0,6,0,0,5,5,6,6,5,5],\r\n    [6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5],\r\n    [6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5]\r\n]\r\n\r\nexport default tiles;\r\n","import tiles from \"./tiles\";\r\nimport enemies from \"./enemies\";\r\n\r\nconst levelRange = [1, 4];\r\n\r\nexport default {\r\n  tiles,\r\n  enemies,\r\n  levelRange\r\n};\r\n","export const enemies = [\r\n  {\r\n    name: \"slime\",\r\n    image: \"slime.png\",\r\n    const: 6\r\n  },\r\n  {\r\n    name: \"spider\",\r\n    image: \"spider.png\",\r\n    const: 10\r\n  },\r\n  {\r\n    name: \"wolf\",\r\n    image: \"wolf.png\",\r\n    const: 15\r\n  }\r\n];\r\n\r\nexport default enemies;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Combat from \"../../features/combat\";\r\nimport store from \"../../config/store\";\r\nimport { range, sample } from \"../../array\";\r\nimport map from \"../../maps/1\";\r\nimport \"./style.css\";\r\n\r\nfunction randomEnemy(enemies, levelRange) {\r\n  const _enemy = sample(enemies);\r\n  return {\r\n    ..._enemy,\r\n    hp: parseInt(_enemy.const * sample(range(...levelRange)))\r\n  };\r\n}\r\n\r\n// Modal is responsible for combat for now, will most likely use modal for inventory screen and other menus in future\r\nfunction Modal(props) {\r\n  const [enemy, setEnemy] = useState(randomEnemy(map.enemies, map.levelRange));\r\n  const [message, setMessage] = useState(`A wild ${enemy.name} appears!`);\r\n  let [HP, setHP] = useState([50, 3]);\r\n  let [enemyHP, setEnemyHP] = useState(enemy.hp);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleCombatKeys);\r\n    return () => {\r\n      setEnemy(randomEnemy(map.enemies, map.levelRange));\r\n      window.removeEventListener(\"keydown\", handleCombatKeys);\r\n    };\r\n  }, []);\r\n\r\n  function handleHeal() {\r\n    if (HP[1] && HP[0] < 50) {\r\n      setHP([(HP[0] = 50), --HP[1]]);\r\n      setMessage(\"You used a potion!\");\r\n    } else if (HP[0] === 50) {\r\n      setMessage(\"You already have full health!\");\r\n    } else if (!HP[1]) {\r\n      setMessage(\"You have no more potions!\");\r\n    }\r\n  }\r\n\r\n  function handleCombat() {\r\n    const dmg = [\r\n      Math.floor(Math.random() * (11 - 5) + 5),\r\n      Math.floor(Math.random() * (11 - 5) + 5)\r\n    ];\r\n    dmg[1] > enemyHP\r\n      ? setEnemyHP((enemyHP = 0))\r\n      : setEnemyHP((enemyHP = enemyHP - dmg[1]));\r\n    if (enemyHP > 0) {\r\n      dmg[0] > HP[0]\r\n        ? setHP([(HP[0] = 0), HP[1]])\r\n        : setHP([(HP[0] = HP[0] - dmg[0]), HP[1]]);\r\n    }\r\n    if (enemyHP < 1) {\r\n      setMessage(`You dealt ${dmg[0]} and defeated your opponent!`);\r\n      setTimeout(() => {\r\n        store.dispatch({ type: \"END_COMBAT\" });\r\n      }, 2000);\r\n      // need to create a dispatch for dying, for now only win condition\r\n    } else if (HP[0] < 1) {\r\n      setMessage(\"You died!\");\r\n      setTimeout(() => {\r\n        store.dispatch({ type: \"END_COMBAT\" });\r\n      }, 2000);\r\n    } else {\r\n      setMessage(\r\n        `You took ${dmg[0]} damage and dealt ${dmg[1]} to your opponent!`\r\n      );\r\n    }\r\n  }\r\n\r\n  const handleCombatKeys = e => {\r\n    if (props.visible && HP[0] && enemyHP) {\r\n      e.preventDefault();\r\n      switch (e.keyCode) {\r\n        case 17:\r\n          return handleHeal();\r\n        case 32:\r\n          return handleCombat();\r\n        default:\r\n          console.log(e.keyCode);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <h1>COMBAT</h1>\r\n      <Combat enemy={enemy} HP={HP} enemyHP={enemyHP} message={message} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.modal\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Modal);\r\n","import store from \"../../config/store\";\nimport { SPRITE_SIZE, MAP_HEIGHT, MAP_WIDTH } from \"../../config/constants\";\n\nfunction randomCombat() {\n  const random = Math.floor(Math.random() * 10 + 1);\n  if (random === 10) {\n    store.dispatch({ type: \"START_COMBAT\" });\n  }\n}\n\nfunction observeImpassable(newPos) {\n  const { tiles } = store.getState().map;\n  const y = newPos[1] / SPRITE_SIZE;\n  const x = newPos[0] / SPRITE_SIZE;\n  const nextTile = tiles[y][x];\n  return nextTile < 5;\n}\n\nfunction observeBoundaries(newPos) {\n  return (\n    newPos[0] >= 0 &&\n    newPos[0] <= MAP_WIDTH - SPRITE_SIZE &&\n    newPos[1] >= 0 &&\n    newPos[1] <= MAP_HEIGHT - SPRITE_SIZE\n  );\n}\n\nfunction attemptMove(oldPos, newPos) {\n  let inBoundary = observeBoundaries(newPos);\n  if (inBoundary) inBoundary = observeImpassable(newPos);\n  if (inBoundary) animateWalk();\n  randomCombat();\n  return inBoundary ? newPos : oldPos;\n}\n\nfunction getNewPosition(oldPos, direction) {\n  switch (direction) {\n    case \"WEST\":\n      return attemptMove(oldPos, [oldPos[0] - SPRITE_SIZE, oldPos[1]]);\n    case \"EAST\":\n      return attemptMove(oldPos, [oldPos[0] + SPRITE_SIZE, oldPos[1]]);\n    case \"NORTH\":\n      return attemptMove(oldPos, [oldPos[0], oldPos[1] - SPRITE_SIZE]);\n    case \"SOUTH\":\n      return attemptMove(oldPos, [oldPos[0], oldPos[1] + SPRITE_SIZE]);\n    default:\n      return [oldPos[0], oldPos[1]];\n  }\n}\n\nfunction getSpriteLocation(direction) {\n  const index = store.getState().player.walkIndex;\n  switch (direction) {\n    case \"SOUTH\":\n      return `${SPRITE_SIZE * index}px ${SPRITE_SIZE * 0}px`;\n    case \"EAST\":\n      return `${SPRITE_SIZE * index}px ${SPRITE_SIZE * 1}px`;\n    case \"WEST\":\n      return `${SPRITE_SIZE * index}px ${SPRITE_SIZE * 2}px`;\n    case \"NORTH\":\n      return `${SPRITE_SIZE * index}px ${SPRITE_SIZE * 3}px`;\n    default:\n  }\n}\n\nfunction dispatchMove(direction) {\n  const state = store.getState();\n  store.dispatch({\n    type: \"MOVE_PLAYER\",\n    payload: {\n      position: getNewPosition(state.player.position, direction),\n      direction,\n      spriteLocation: getSpriteLocation(direction)\n    }\n  });\n}\n\nfunction handleKeyDown(e) {\n  e.preventDefault();\n  switch (e.keyCode) {\n    case 37:\n      return dispatchMove(\"WEST\");\n    case 38:\n      return dispatchMove(\"NORTH\");\n    case 39:\n      return dispatchMove(\"EAST\");\n    case 40:\n      return dispatchMove(\"SOUTH\");\n    default:\n      console.log(e.keyCode);\n  }\n}\n\nfunction getWalkIndex() {\n  const index = store.getState().player.walkIndex;\n  return index >= 7 ? 0 : index + 1;\n}\n\nfunction animateWalk() {\n  store.dispatch({ type: \"UPDATE_WALK_INDEX\", payload: getWalkIndex() });\n}\n\nexport default function handleMovement(component) {\n  window.addEventListener(\"keydown\", e => {\n    if (!store.getState().modal.visible) handleKeyDown(e);\n  });\n  return component;\n}\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Map from \"../map\";\r\nimport Player from \"../player\";\r\nimport Modal from \"../modal\";\r\nimport map from \"../../maps/1\";\r\nimport { MAP_WIDTH, MAP_HEIGHT } from \"../../config/constants\";\r\nimport handleMovement from \"../movement\";\r\n\r\nclass World extends React.Component {\r\n  componentDidMount() {\r\n    this.props.persistMapData(map);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"map\"\r\n        style={{\r\n          position: \"relative\",\r\n          width: MAP_WIDTH,\r\n          height: MAP_HEIGHT,\r\n          margin: \"20px auto\"\r\n        }}\r\n      >\r\n        <Map {...this.props.map} />\r\n        <Player />\r\n        {!this.props.modal.visible && <p>Press the arrow keys to move!</p>}\r\n        {this.props.modal.visible && <Modal />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    modal: state.modal,\r\n    map: state.map\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    persistMapData: tiles => {\r\n      dispatch({ type: \"ADD_TILES\", payload: tiles });\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(handleMovement(World));\r\n","import React, { Component } from \"react\";\nimport World from \"./features/world\";\n\nclass App extends Component {\n  render() {\n    return <World />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./config/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}